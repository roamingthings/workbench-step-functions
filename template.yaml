AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  workbench-step-functions

  Retrieve jokes asynchronously the Serverless way.
 
Globals:
  Function:
    Layers:
      - !Ref RuntimeDependenciesLayer
    Environment:
      # # Environment variables used by every function
      # Variables:
      #  SAMPLE_TABLE: !Ref SampleTable
    Runtime: nodejs14.x
    MemorySize: 128
    Timeout: 100

Resources:
  RetrieveJokeStateMachine:
    Type: AWS::Serverless::StateMachine # More info about State Machine Resource: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-statemachine.html
    Properties:
      DefinitionUri: statemachine/retrieve_joke.asl.json
      DefinitionSubstitutions:
        RetrieveJokeFunctionArn: !GetAtt RetrieveJokeFunction.Arn
        DDBPutJokesJob: !Sub arn:${AWS::Partition}:states:::dynamodb:putItem
        DDBTable: !Ref JokesJobTable
      Policies: # Find out more about SAM policy templates: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-policy-templates.html
        - LambdaInvokePolicy:
            FunctionName: !Ref RetrieveJokeFunction
        - DynamoDBWritePolicy:
            TableName: !Ref JokesJobTable

  CreateJobFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: makefile
    Properties:
      Handler: dist/create-job/app.createJobHandler
      Description: Create and start a new job and return the job id
      Environment:
        Variables:
          RETRIEVE_JOKE_STATE_MACHINE_ARN: !Ref RetrieveJokeStateMachine
      Policies:
        - StepFunctionsExecutionPolicy:
            StateMachineName: !GetAtt RetrieveJokeStateMachine.Name
      Events:
        CreateJob:
          Type: Api
          Properties:
            Path: /jobs
            Method: post

  RetrieveJokeFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: makefile
    Properties:
      Handler: dist/retrieve-joke/app.retrieveJokeHandler
      Description: Retrieve a Joke from the external JokeAPI

  RuntimeDependenciesLayer:
    Type: AWS::Serverless::LayerVersion
    Metadata:
      BuildMethod: makefile
    Properties:
      Description: Runtime dependencies for Lambdas
      ContentUri: ./
      CompatibleRuntimes:
        - nodejs14.x
      RetentionPolicy: Retain

  JokesJobTable:
    Type: AWS::Serverless::SimpleTable # More info about SimpleTable Resource: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-simpletable.html
    Properties:
      PrimaryKey:
        Name: Id
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  CreateJobApi:
    Description: "API Gateway endpoint URL for Prod stage for Create Job function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/jobs"
  CreateJobFunction:
    Description: "Create Job Lambda Function ARN"
    Value: !GetAtt CreateJobFunction.Arn
  CreateJobIamRole:
    Description: "Implicit IAM Role created for Create Job function"
    Value: !GetAtt CreateJobFunctionRole.Arn
  RetrieveJokeStateMachineArn:
    Description: "Retrieve Joke state machine ARN"
    Value: !Ref RetrieveJokeStateMachine
  RetrieveJokeStateMachineRole:
    Description: "IAM Role created for Retrieve Joke state machine based on the specified SAM Policy Templates"
    Value: !GetAtt RetrieveJokeStateMachine.Arn
